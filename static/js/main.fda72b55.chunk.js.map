{"version":3,"sources":["components/Basic/index.js","components/Basic/Basic.js","components/data/countries.js","components/data/cities.js","components/Contacts/index.js","components/Contacts/Contacts.js","components/Image/index.js","components/Image/Image.js","components/Finish/index.js","components/Finish/Finish.js","components/Loader/index.js","components/Loader/Loader.js","components/form_validation.js","components/Navigation/index.js","components/Navigation/Navigation.js","components/HandleStep/index.js","components/HandleStep/HandleStep.js","components/App/index.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Basic","this","props","data","name","surname","pass","repeatpass","gender","errorsdata","onStatusChanged","id","className","htmlFor","type","value","placeholder","onChange","Fragment","checked","Component","country","Contacts","getCities","arr","key","cities","Number","push","email","mobile","city","getAllcities","console","log","class","countries","map","Image","selectImage","e","reader","FileReader","onload","target","result","readAsDataURL","files","image","src","Finish","loading","countryName","find","i","cityName","Loader","form_validation","steps","errors","charAt","toLowerCase","isNaN","test","length","slice","Navigation","StepsStatusNext","activeStep","usersdata","Object","keys","item","route","StepsStatusPrev","itemprev","onNextPage","onPreviousPage","NavigationUp","onRefreshPage","onReloadBasic","disabled","active","role","to","onClick","event","preventDefault","HandleStep","StepView","done","items","App","state","newUsersData","newErrorsData","setState","newActiveStep","newSteps","PrevStep","newobj","setTimeout","k","window","location","reload","values","some","x","path","exact","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fda72b55.chunk.js","sourcesContent":["import Basic from './Basic';\r\n\r\nexport default Basic;","import React, { Component } from 'react';\r\nimport '../Basic/Basic.scss';\r\n\r\nexport default class Basic extends Component {\r\n    render() {\r\n        const {data: {name, surname, pass, repeatpass, gender}, \r\n        errorsdata, onStatusChanged} = this.props;\r\n        return (\r\n            \r\n                <form id=\"form-wrapper\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" name='name' className={errorsdata.name ? \"form-control invalid\": \"form-control\"} \r\n                        id=\"name\" \r\n                         value={name}\r\n                        placeholder=\"Enter your name\"\r\n                        onChange={onStatusChanged}\r\n                        />\r\n                        {errorsdata.name && <div className=\"invalid-feedback\">{errorsdata.name}</div>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"surname\">Surname</label>\r\n                        <input type=\"text\" name='surname' className={errorsdata.surname ? \"form-control invalid\": \"form-control\"} \r\n                        id=\"surname\" \r\n                        value={surname} \r\n                        placeholder=\"Enter your surname\"\r\n                        onChange={onStatusChanged} />\r\n                        {errorsdata.surname && <div className=\"invalid-feedback\">{errorsdata.surname}</div>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"pass\">Password</label>\r\n                        <input type=\"password\" name='pass' className={errorsdata.pass ? \"form-control invalid\": \"form-control\"}\r\n                        id=\"pass\" \r\n                        value={pass}\r\n                        placeholder=\"Enter password\" \r\n                        onChange={onStatusChanged}/>\r\n                        {errorsdata.pass && <div className=\"invalid-feedback\">{errorsdata.pass}</div>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"repeatpass\">Repeat Password</label>\r\n                        <input type=\"password\" name='repeatpass' className={errorsdata.repeatpass ? \"form-control invalid\": \"form-control\"} \r\n                        id=\"repeatpass\" \r\n                        value={repeatpass}\r\n                        placeholder=\"Enter email\" \r\n                        onChange={onStatusChanged}/>\r\n                        {errorsdata.repeatpass && <div className=\"invalid-feedback\">{errorsdata.repeatpass}</div>}\r\n                    </div>\r\n                    <React.Fragment>\r\n                        <span>Gender</span>\r\n                        <div className=\"form-check radio\">\r\n                            <input className=\"form-check-input\" type=\"radio\" \r\n                                name=\"male\" id=\"male\" value=\"male\" \r\n                                onChange={onStatusChanged}\r\n                                checked={gender == \"male\"}/>\r\n                            <label className=\"form-check-label\" htmlFor=\"male\">\r\n                                Male\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-check radio\">\r\n                            <input className=\"form-check-input\" type=\"radio\" \r\n                                name=\"female\" id=\"female\" value=\"female\"\r\n                                onChange={onStatusChanged} \r\n                                checked={gender == \"female\"} />\r\n                            <label className=\"form-check-label\" htmlFor=\"female\">\r\n                                Female\r\n                            </label>\r\n                        </div>\r\n                    </React.Fragment>\r\n                </form>\r\n            \r\n        )\r\n    }\r\n}\r\n","export default [\r\n    {id: 1, name: 'Ukraine'},\r\n    {id: 2, name: 'Germany'},\r\n    {id: 3, name: 'France'},\r\n    {id: 4, name: 'UK'},\r\n    {id: 5, name: 'USA'},\r\n]\r\n\r\n","export default {\r\n    \"1\": { country: 1, name: \"Kyiv\" },\r\n    \"2\": { country: 1, name: \"Lviv\" },\r\n    \"3\": { country: 1, name: \"Odessa\" },\r\n    \"4\": { country: 1, name: \"Dnipro\" },\r\n    \"5\": { country: 1, name: \"Kharkiv\" },\r\n  \r\n    \"6\": { country: 2, name: \"Berlin\" },\r\n    \"7\": { country: 2, name: \"Dortmund\" },\r\n    \"8\": { country: 2, name: \"Drezden\" },\r\n    \"9\": { country: 2, name: \"Hamburg\" },\r\n    \"10\": { country: 2, name: \"Koln\" },\r\n  \r\n    \"11\": { country: 3, name: \"Paris\" },\r\n    \"12\": { country: 3, name: \"Lyon\" },\r\n    \"13\": { country: 3, name: \"Toulouse\" },\r\n    \"14\": { country: 3, name: \"Marseille\" },\r\n    \"15\": { country: 3, name: \"Bordeaux\" },\r\n  \r\n    \"16\": { country: 4, name: \"London\" },\r\n    \"17\": { country: 4, name: \"Liverpool\" },\r\n    \"18\": { country: 4, name: \"Manchester\" },\r\n    \"19\": { country: 4, name: \"Birmingham\" },\r\n    \"20\": { country: 4, name: \"Newcastle\" },\r\n  \r\n    \"21\": { country: 5, name: \"Washington\" },\r\n    \"22\": { country: 5, name: \"San-Francisco\" },\r\n    \"23\": { country: 5, name: \"New-York\" },\r\n    \"24\": { country: 5, name: \"Las-Vegas\" },\r\n    \"25\": { country: 5, name: \"Miami\" }\r\n  };","import Contacts from './Contacts';\r\n\r\nexport default Contacts;","import React, { Component } from 'react';\r\nimport '../Contacts/Contacts.scss';\r\nimport countries from '../data/countries';\r\nimport cities from '../data/cities';\r\n\r\nexport default class Contacts extends Component {\r\n\r\n  getCities = (country) =>{\r\n    const arr = [];\r\n    for(let key in cities){\r\n        if(cities[key].country === Number(country)){\r\n            arr.push({\r\n                id: key,\r\n                name: cities[key].name\r\n            })\r\n        }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n\r\n    render() {\r\n        const {data: {email, mobile, country, city}, \r\n        errorsdata, onStatusChanged} = this.props;\r\n        const getAllcities = this.getCities(country);\r\n        console.log(getAllcities);\r\n        return (\r\n          \r\n                <form id=\"form-wrapper\">\r\n                    <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"text\" className={errorsdata.email ? \"form-control invalid\": \"form-control\"}\r\n                            id=\"email\"\r\n                            name='email'\r\n                            value={email} \r\n                            placeholder=\"Enter email\"\r\n                            onChange={onStatusChanged} />\r\n                            {errorsdata.email && <div className=\"invalid-feedback\">{errorsdata.email}</div>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"mobile\">Mobile</label>\r\n                            <input type=\"tel\" className={errorsdata.mobile ? \"form-control invalid\": \"form-control\"}\r\n                            id=\"mobile\"\r\n                            name='mobile'\r\n                            value={mobile} \r\n                            placeholder=\"Enter mobile\" \r\n                            onChange={onStatusChanged}/>\r\n                            {errorsdata.mobile && <div className=\"invalid-feedback\">{errorsdata.mobile}</div>}\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label htmlFor=\"country\">Select country</label>\r\n                            <select className=\"form-control\" name='country' id=\"country\" value={country}\r\n                            onChange={onStatusChanged}>\r\n                            {countries.map(country => <option key={country.id} value={country.id}>{country.name}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label htmlFor=\"city\">Select City</label>\r\n                            <select className={errorsdata.city ? \"form-control invalid\": \"form-control\"} name='city' id=\"city\" value={city}\r\n                            onChange={onStatusChanged}>\r\n                                <option value=\"\">Select city</option>\r\n                                {getAllcities.map(city => <option value={city.id} key={city.id}>{city.name}</option>)}\r\n                            </select>\r\n                            {errorsdata.city && <div className=\"invalid-feedback\">{errorsdata.city}</div>}\r\n                        </div>\r\n                </form>\r\n           \r\n        )\r\n    }\r\n}\r\n","import Image from './Image';\r\n\r\nexport default Image;","import React, { Component } from 'react';\r\nimport '../Image/Image.scss';\r\n\r\nexport default class Image extends Component {\r\n    \r\n    selectImage = e => {\r\n        let reader = new FileReader();\r\n        reader.onload = e => {\r\n            this.props.onStatusChanged({\r\n                target: {\r\n                    name: 'image',\r\n                    value: e.target.result\r\n                }\r\n            })\r\n        }\r\n        reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  \r\n\r\n    render() {\r\n        const {errorsdata, data: {image}, onStatusChanged} = this.props;\r\n        return (\r\n                <form className=\"image-form\">\r\n                   {image ? <img src={image}  /> : <div className=\"hidden\"></div> }\r\n                   <div class=\"form-group\">\r\n                        <label htmlFor=\"image\">Choose your photo</label>\r\n                        <input type=\"file\" class=\"form-control-file\"\r\n                        name=\"image\" id=\"image\" \r\n                        onChange={this.selectImage}/>\r\n                        {errorsdata.image && <div className=\"invalid-feedback\">{errorsdata.image}</div>}\r\n                    </div>\r\n                </form>\r\n        )\r\n    }\r\n}\r\n","import Finish from './Finish';\r\n\r\nexport default Finish;","import React, { Component } from 'react';\r\nimport '../Finish/Finish.scss';\r\nimport countries from '../data/countries';\r\nimport cities from '../data/cities';\r\n\r\nexport default class Finish extends Component {\r\n    render() {\r\n        const {loading, data}= this.props;\r\n        const {name, surname, gender, country, city, email, mobile, image} = data;\r\n        const countryName = countries.find(i => i.id === +country).name;\r\n        const cityName = cities[city].name;\r\n        console.log(name);\r\n        return (\r\n            <React.Fragment>\r\n                {!data ? null : (<div className=\"finish\">\r\n                <img src={image}/>\r\n                <ul>\r\n                    <li>User: {name} {surname}</li>\r\n                    <li>Gender: {gender}</li>\r\n                    <li>Location: {countryName} {cityName}</li>\r\n                    <li>Email: {email} </li>\r\n                    <li>Phone number: {mobile}</li>\r\n                </ul>\r\n            </div>)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import Loader from './Loader';\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport './Loader.scss';\r\n\r\nexport default class Loader extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"lds-css\">\r\n                <div className=\"lds-double-ring\">\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const form_validation = (steps, data) => {\r\n    var regemail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n    var regmob = /^[(]{0,1}[0-9]{3}[)]{0,1}[-\\s\\.]{0,1}[0-9]{3}[-\\s\\.]{0,1}[0-9]{4}$/i;\r\n    const errors = {};\r\n\r\n    switch(steps){\r\n        case 0: \r\n            if(!data.name){\r\n                errors.name = \"Required\";\r\n                console.log(typeof data.name);\r\n            }else if(data.name.charAt(0) === data.name.charAt(0).toLowerCase() || !isNaN(data.name.charAt(0)) ){\r\n                errors.name = \"Your first name's letter should be Capitalized!\"\r\n            }else if(/\\d/.test(data.name)){\r\n                errors.name = \"Your name shouldn't consist of letters!\"\r\n            }\r\n            else if(data.name.length >= 12){\r\n                errors.name = 'Your name should be no more 12 charachters, please try again';\r\n            }else if(data.name.length < 3){\r\n                errors.name = \"Enter valid name (fullname)!\"\r\n                console.log(typeof data.name.slice(0));\r\n            }\r\n\r\n            \r\n            if(!data.surname){\r\n                errors.surname = \"Required\";\r\n            }else if(data.surname.charAt(0) === data.surname.charAt(0).toLowerCase() || !isNaN(data.surname.charAt(0))){\r\n                errors.surname = \"Your first surname's letter should be Capitalized!\"\r\n            }else if(/\\d/.test(data.surname)){\r\n                errors.surname = \"Your name shouldn't consist of letters!\"\r\n            }else if(data.surname.length >= 12){\r\n                errors.surname = 'Your surname should be no more 12 charachters, please try again';\r\n            }else if(data.surname.length < 3){\r\n                errors.surname = \"Enter valid name (fullname)!\"\r\n            }\r\n\r\n            if(!data.pass){\r\n                errors.pass = \"Required\";\r\n                console.log(data.pass == data.pass.charAt(0).toLowerCase());\r\n            }else if(data.pass.charAt(0) === data.pass.charAt(0).toLowerCase() || !isNaN(data.pass.charAt(0))){\r\n                errors.pass = \"Your password's first letter should be Capitalized and not a digit\";\r\n                console.log(isNaN(data.pass.charAt(0)));\r\n            }else if(data.pass.length >= 10){\r\n                errors.pass = 'Your password should be no more 10 charachters, please try again';\r\n            }else if(data.pass.length < 5){\r\n                errors.pass = \"Enter valid password!\"\r\n            }\r\n\r\n            if(!data.repeatpass){\r\n                errors.repeatpass = 'Required';\r\n            }else if(data.repeatpass !== data.pass){\r\n                errors.repeatpass = `Passwords didn't match, try again!`;\r\n            }\r\n            break;\r\n        case 1:\r\n            if(!data.email.length){\r\n                errors.email = \"Required\";\r\n            }else if(!regemail.test(data.email)){\r\n                errors.email = \"Invalid email\";\r\n             }\r\n\r\n            if(!data.mobile){\r\n                errors.mobile = \"Required\";\r\n            }else if(!regmob.test(data.mobile)){\r\n                errors.mobile = \"Invalid mobile\";\r\n             }\r\n\r\n            if(!data.city){\r\n                errors.city = \"Required\";\r\n            }\r\n\r\n            break;\r\n            case 2: \r\n            \r\n                if(!data.image){\r\n                    errors.image = 'Required';\r\n            }\r\n            break;\r\n            default:\r\n            break;\r\n    }\r\n\r\n    return errors;\r\n\r\n}\r\n\r\nexport default form_validation;","import Navigation from './Navigation';\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport '../Navigation/Navigation.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../Loader';\r\nimport form_validation from '../form_validation';\r\n\r\n\r\nexport default class Navigation extends Component {\r\n    \r\n    StepsStatusNext = () => {\r\n        const {steps, activeStep, usersdata} = this.props;\r\n       \r\n        let errors = form_validation(activeStep, usersdata);\r\n        for(let i = 0; i<steps.length; i++){\r\n            if(activeStep === i && Object.keys(errors).length === 0){\r\n             var item = steps[i + 1].route;\r\n            }\r\n        }\r\n\r\n        return item;\r\n    }\r\n    \r\n    StepsStatusPrev = () => {\r\n        const {steps, activeStep} = this.props;\r\n        \r\n\r\n        for(let i = 0; i<steps.length; i++){\r\n        \r\n            if(activeStep === i){\r\n                var itemprev = steps[i - 1].route;\r\n               }\r\n        }\r\n\r\n        return itemprev;\r\n    }\r\n    render() {\r\n        const {activeStep, onNextPage, onPreviousPage, NavigationUp,\r\n             steps, onRefreshPage, onReloadBasic, loading} = this.props;\r\n        const [{route, id}] = steps;\r\n        const disabled = steps[0].active ? true : false;\r\n        \r\n         const spinner = loading ? <Loader />: null;\r\n        \r\n        return (\r\n            <div className=\"btn-group\" role=\"group\">\r\n               \r\n               \r\n                {steps[3].active && (\r\n                <Link to ={onReloadBasic}>\r\n                        <span onClick={onRefreshPage} className='btn btn-light'>\r\n                            Reset\r\n                        </span>\r\n                </Link>)\r\n                }\r\n                {!steps[3].active &&\r\n                (<React.Fragment>\r\n                    {steps[0].active ? <Link to='/'>\r\n                        <span onClick={(event) => event.preventDefault()} type=\"button\" \r\n                            className={steps[0].active ? 'btn btn-light disabled' : 'btn btn-light'}\r\n                            disabled={disabled}\r\n                            >\r\n                            Previous\r\n                        </span>\r\n                    </Link> : <Link to={this.StepsStatusPrev}>\r\n                        <span onClick={onPreviousPage} type=\"button\" \r\n                            className='btn btn-light'\r\n                            >\r\n                            Previous\r\n                        </span>\r\n                    </Link>}\r\n                    <Link to={this.StepsStatusNext}>\r\n                        <span onClick={onNextPage} type=\"button\" \r\n                        className=\"btn btn-info\">\r\n                            Next\r\n                        </span>\r\n                    </Link>\r\n                \r\n                \r\n                    </React.Fragment>)\r\n                }\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import HandleStep from './HandleStep';\r\n\r\nexport default HandleStep;","import React, { Component } from 'react';\r\nimport '../HandleStep/HandleStep.scss';\r\n\r\nexport default class HandleStep extends Component {\r\n    \r\n    StepView = (arr) => {\r\n        return arr.map(item => {\r\n            return (\r\n                \r\n                    <div key={item.id} className={item.active ? \"step active rounded-circle\": item.done ? \"step done rounded-circle\": \"step rounded-circle\"}>\r\n                        <span>{item.id}</span>\r\n                        <span>{item.name}</span>\r\n                     </div>\r\n                     \r\n                \r\n            )\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const {steps, activeStep} = this.props;\r\n        const items = this.StepView(steps);\r\n        console.log(steps);\r\n        return (\r\n            <div className=\"steps-container\">\r\n                 {items}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import App from './App';\r\n\r\nexport default App;","import React, { Component } from 'react';\nimport '../App/App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Basic from '../Basic';\nimport Contacts from '../Contacts';\nimport Image from '../Image';\nimport Finish from '../Finish';\nimport Navigation from '../Navigation';\nimport countries from '../data/countries';\nimport form_validation from '../form_validation';\nimport cities from '../data/cities';\nimport HandleStep from '../HandleStep';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Loader from '../Loader';\n\nexport default class App extends Component {\n\n  state = {\n    activeStep: 0,\n    steps: [\n      {name: 'Basic', route: '/', id:0, active: true, done: false},\n      {name: 'Contacts', route: '/contacts', id:1, active: false, done: false},\n      {name: 'Image', route: '/image', id:2, active: false, done: false},\n      {name: 'Finish', route: '/finish', id:3, active: false, done: false}\n    ],\n    usersdata: {\n      name: '', surname: '', pass: '', repeatpass: '', gender: 'male',\n      email: '', mobile: '', country: '1', city: '',\n      image: ''\n    },\n    errorsdata: {\n      name: false, surname: false, pass:false, repeatpass: false, gender: false,\n      email: false, mobile: false, country: false, city: false,\n      image: false\n    }, \n    loading: false\n  }\n\n  onStatusChanged = e => {\n    const newUsersData = {\n      ...this.state.usersdata,\n      [e.target.name]: e.target.value\n    }\n\n    const newErrorsData = {\n      ...this.state.errorsdata,\n      [e.target.name]: false\n    }\n\n    if(e.target.name === 'male'){\n      newUsersData.gender = 'male';\n    }else{\n      newUsersData.gender = 'female';\n    }\n  \n    if(e.target.name === 'country'){\n      newUsersData.city = '';\n      newErrorsData.city = false;\n    }\n\n    this.setState((state) =>{\n      return{\n        ...state,\n        usersdata: newUsersData,\n        errorsdata: newErrorsData\n      }\n    })\n  }\n\n  onNextPage = () => {\n    const {activeStep, steps, usersdata, errorsdata} = this.state;\n    let errors = form_validation(activeStep, usersdata);\n    console.log(Object.keys(errors).length)\n    if(Object.keys(errors).length === 0){\n      const newActiveStep = activeStep + 1;\n      const newSteps = [...steps];\n      newSteps[newActiveStep].active = true;\n      newSteps[activeStep].active = false;\n      console.log(steps[newActiveStep]);\n      newSteps[activeStep].done = true;\n\n      this.setState({\n        activeStep: newActiveStep,\n        steps: newSteps\n      })\n    }else{\n      this.setState({\n        errorsdata: errors\n      })\n    }\n  }\n\n  onPreviousPage = () => {\n    const {activeStep, steps} = this.state;\n    const PrevStep = activeStep - 1;\n    const newSteps = [...steps];\n    newSteps[PrevStep].active = true;\n    newSteps[PrevStep].done = false;\n    newSteps[activeStep].active = false;\n    newSteps[activeStep].done = false;\n\n    this.setState({\n      activeStep: PrevStep,\n      steps: newSteps\n    })\n  }\n\n  onRefreshPage = () => {\n    let newobj = {};\n    this.setState({\n      loading: true\n    })\n    setTimeout(() => {\n      for(let k in this.state.usersdata){\n        newobj[k] = this.state.usersdata[k];\n        newobj[k]=''\n      }\n  \n      this.setState({\n        usersdata: newobj,\n        loading: false\n      });\n      console.log(this.state.loading)\n    },2000);\n\n    setTimeout(() => {\n      window.location.reload()\n      console.log(\"reload\");\n    }, 2500); \n    \n  }\n\n  onReloadBasic = () => {\n    let item = '';\n    setTimeout(() => {\n      item='/basic';\n      console.log(\"item\")\n    }, 2500);\n    return item;\n  }\n  \n  render() {\n   const {activeStep, usersdata, errorsdata, steps, loading} = this.state;\n   console.log(Object.values(usersdata).some(x => (x == null || x == '')))// нужно проверить на наличие пустых строк https://stackoverflow.com/questions/27709636/determining-if-all-attributes-on-a-javascript-object-are-null-or-an-empty-string\n    return (\n      <React.Fragment>\n      { steps[3].active && Object.values(usersdata).some(x => (x == null || x == '')) ? null:\n      (<div className='container components-container'>\n        <Router>\n          {loading ? <Loader /> : (\n            <div className={loading ? 'd-none': 'card'}>\n           \n            {(steps[3].active && !usersdata.length )? null: <HandleStep steps={steps} activeStep={activeStep} />}\n            {steps[0].active && <Route path={steps[0].route}  exact \n            render = {() => \n              <Basic data={usersdata}\n              errorsdata={errorsdata}\n              onStatusChanged={this.onStatusChanged}/>\n             } />}\n            \n            {steps[1].active && <Route path={steps[1].route} \n              render={() => <Contacts data={usersdata}\n              errorsdata={errorsdata} \n              onStatusChanged={this.onStatusChanged}/>} />\n              }\n            {steps[2].active && <Route path={steps[2].route} \n                render = {() => <Image data={usersdata}\n                errorsdata={errorsdata} \n                onStatusChanged={this.onStatusChanged}/>}/>}\n           \n            {steps[3].active && <Route path={steps[3].route} \n              render={() => <Finish data={usersdata} loading={loading}/>}\n            />}\n            {steps[3].active && Object.values(usersdata).some(x => (x == null || x == '')) ? null: <Navigation activeStep={activeStep} \n            steps = {steps} onRefreshPage={this.onRefreshPage} onReloadBasic={this.onReloadBasic}\n            onNextPage={this.onNextPage}  NavigationUp={this.NavigationUp} usersdata={usersdata}\n            onPreviousPage={this.onPreviousPage} loading={loading}/>}\n          </div>\n          )}\n          \n        </Router>\n      </div>)\n        }\n        </React.Fragment>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}